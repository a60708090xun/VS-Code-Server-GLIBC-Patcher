#!/bin/bash
#
# Automatically patch the VS Code Server to use a custom GLIBC toolchain
# Version 2.0: Simplified exec path for robustness

set -e # Exit immediately if a command exits with a non-zero status.

# --- Configure your paths here ---
# 1. Set the main path to your toolchain's sysroot directory.
TOOLCHAIN_SYSROOT_DIR="/opt/toolchain-vscode-ssh/x86_64-linux-gnu/x86_64-linux-gnu/sysroot"

# 2. Set the path to the patchelf executable.
PATCHELF_PATH="/usr/local/bin/patchelf"
# ---------------------------------

# --- Derived variables (usually no need to change these) ---
GLIBC_LINKER="${TOOLCHAIN_SYSROOT_DIR}/lib/ld-linux-x86-64.so.2"
GLIBC_PATH="${TOOLCHAIN_SYSROOT_DIR}/lib"
# -------------------------------------------------------------

VSCODE_DIR="$HOME/.vscode-server"

echo "Searching for VS Code Server directory: $VSCODE_DIR"
if [ ! -d "$VSCODE_DIR" ]; then
    echo "Error: VS Code Server directory not found at $VSCODE_DIR."
    echo "Please try to connect with VS Code Remote-SSH at least once to download the server files."
    exit 1
fi

# Find the target executable (filename format is 'code-<commit-hash>')
TARGET_FILE=$(find "$VSCODE_DIR" -name 'code-*' -type f -executable ! -name '*.original' | head -n 1)

if [ -z "$TARGET_FILE" ]; then
    echo "Error: Could not find the VS Code Server executable in $VSCODE_DIR."
    echo "The server's structure might have changed, or it has not been downloaded yet."
    exit 1
fi

echo "Found target server file: $TARGET_FILE"

ORIGINAL_FILE="${TARGET_FILE}.original"

# Check if it has already been patched
if [ -f "$ORIGINAL_FILE" ]; then
    echo "Already patched. No action needed."
    exit 0
fi

echo "Not patched yet. Starting backup and wrap process..."

# 1. Back up the original file
mv "$TARGET_FILE" "$ORIGINAL_FILE"
echo "Original file backed up to: $ORIGINAL_FILE"

# 2. Create the new wrapper script (with the same name as the original file)
cat <<EOF > "$TARGET_FILE"
#!/bin/bash
#
# VS Code Server Wrapper Script (auto-generated by auto_patch_vscode.sh)

export VSCODE_SERVER_CUSTOM_GLIBC_LINKER="$GLIBC_LINKER"
export VSCODE_SERVER_CUSTOM_GLIBC_PATH="$GLIBC_PATH"
export VSCODE_SERVER_PATCHELF_PATH="$PATCHELF_PATH"

# Execute our backed-up original file using its full, absolute path.
# This is simpler and more robust than the previous version.
exec "$ORIGINAL_FILE" "\$@"
EOF

# 3. Make the new script executable
chmod +x "$TARGET_FILE"

echo "Successfully created wrapper script: $TARGET_FILE"
echo "Patching complete! You can now try to connect from VS Code."